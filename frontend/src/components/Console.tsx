/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ["base_03_-_Default_0"]: THREE.Mesh;
    ["Glass_07_-_Default_0"]: THREE.Mesh;
    ["Clamshell_03_-_Default_0"]: THREE.Mesh;
  };
  materials: {
    ["03_-_Default"]: THREE.MeshStandardMaterial;
    ["07_-_Default"]: THREE.MeshStandardMaterial;
  };
};

const Console = (props: JSX.IntrinsicElements["group"]) => {
  const { nodes, materials } = useGLTF("./nintendo.glb") as GLTFResult;

  return (
    <group {...props} dispose={null}>
      <group
        name="base"
        position={[4.41, 16.54, -18.96]}
        rotation={[-Math.PI / 2, 0, Math.PI]}
        scale={[1.16, 1.16, 1]}
      >
        <mesh
          name="base_03_-_Default_0"
          // castShadow
          // receiveShadow
          geometry={nodes["base_03_-_Default_0"].geometry}
          material={materials["03_-_Default"]}
          position={[-107.6, 88.86, -6.05]}
        />
      </group>
      <group
        name="Clamshell"
        position={[4.41, 16.65, -19.31]}
        rotation={[-0.61, 0, Math.PI]}
        scale={[1.16, 1.16, 1]}
      >
        <mesh
          name="Glass_07_-_Default_0"
          // castShadow
          // receiveShadow
          geometry={nodes["Glass_07_-_Default_0"].geometry}
          material={materials["07_-_Default"]}
          position={[-107.6, 88.86, -6.05]}
        />
        <mesh
          name="Clamshell_03_-_Default_0"
          // castShadow
          // receiveShadow
          geometry={nodes["Clamshell_03_-_Default_0"].geometry}
          material={materials["03_-_Default"]}
          position={[-107.6, 88.86, -6.05]}
        />
      </group>
    </group>
  );
};

useGLTF.preload("./nintendo.glb");

export default Console;
